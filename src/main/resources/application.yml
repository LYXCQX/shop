spring:
  datasource:
    url: jdbc:mysql://localhost:1386/shop?useUnicode=true&characterEncoding=UTF-8
    username: root
    password: Biegaosuwo.
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
  thymeleaf:
    cache: false
  mvc:
    favicon:
      enabled: false
    
server:
  port: 6837
  servlet:
    context-path: /qnn
  compression:
    enabled: true
    min-response-size: 1024
    mime-types:
    - image/png
    - image/jpeg
    - image/jpg
    - text/html
    - application/javascript
    - text/css
    - application/octet-stream
    - application/json

#spring.servlet.multipart.enabled = true ＃是否启用对分段上传的支持。
#spring.servlet.multipart.file-size-threshold = 0B ＃将文件写入磁盘后的阈值。
#spring.servlet.multipart.location = ＃上传文件的中间位置。
#spring.servlet.multipart.max-file-size = 1MB ＃最大文件大小。
#spring.servlet.multipart.max-request-size = 10MB ＃最大请求大小。
#spring.servlet.multipart.resolve-lazily = false ＃是否在文件或参数访问时懒惰地解析多部分请求。
#分页插件配置
pagehelper:
  helper-dialect: mysql #分页插件会自动检测当前的数据库链接，自动选择合适的分页方式。 你可以配置helperDialect属性来指定分页插件使用哪种方言。配置时，可以使用下面的缩写值：oracle,mysql,mariadb,sqlite,hsqldb,postgresql,db2,sqlserver,informix,h2,sqlserver2012,derby
  reasonable: false #分页合理化参数，默认值为false。当该参数设置为 true 时，pageNum<=0 时会查询第一页， pageNum>pages（超过总数时），会查询最后一页。默认false 时，直接根据参数进行查询。
  auto-runtime-dialect: true #认值为 false。设置为 true 时，允许在运行时根据多数据源自动识别对应方言的分页 （不支持自动选择sqlserver2012，只能使用sqlserver）
  support-methods-arguments: true #支持通过 Mapper 接口参数来传递分页参数，默认值false，分页插件会从查询方法的参数值中，自动根据上面 params 配置的字段中取值，查找到合适的值时就会自动分页。 使用方法可以参考测试代码中的 com.github.pagehelper.test.basic 包下的 ArgumentsMapTest 和 ArgumentsObjTest。
  page-size-zero: true #默认值为 false，当该参数设置为 true 时，如果 pageSize=0 或者 RowBounds.limit = 0 就会查询出全部的结果（相当于没有执行分页查询，但是返回结果仍然是 Page 类型）。

cors:
  patchs:
    - 
      - /shop/**
      - http://localhost:6837
      - http://localhost:6041
      - http://localhost:8080
    - 
      - /user/**
      - http://localhost:9564
      - http://localhost:6041
      - http://localhost:8080
  ip:
    - http://localhost:6837
    - http://localhost:6041
    - http://localhost:8080
    - http://localhost:3205
    
logging:
  config: classpath:log4j2.yml
  level:
    com.lll.shop.dao: debug
  